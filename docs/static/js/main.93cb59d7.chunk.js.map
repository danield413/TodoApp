{"version":3,"sources":["globalState/context.js","hooks/useLocalStorage.js","components/ToDo.jsx","components/ToDoList.jsx","components/Graphic.jsx","components/Form.jsx","components/Screen.jsx","globalState/reducer.js","globalState/ContextProvider.jsx","App.js","reportWebVitals.js","theme/index.js","index.js"],"names":["Context","React","createContext","useLocalStorage","useState","state","setState","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","todos","complete","incomplete","parsed","unshift","ls","setLocalStorage","deleteFromLS","id","currentLS","filter","todo","useStyles","makeStyles","theme","root","marginBottom","actions","display","justifyContent","ToDo","number","title","description","importance","classes","enqueueSnackbar","useSnackbar","dispatch","useContext","Fade","in","Card","className","CardContent","Typography","color","gutterBottom","component","CardActions","Fab","size","onClick","type","payload","variant","ToDoList","length","black","fontSize","htmlColor","map","Graphic","data","label","labels","datasets","backgroundColor","options","legend","scales","yAxes","ticks","beginAtZero","Form","useForm","register","handleSubmit","reset","form","noValidate","autoComplete","onSubmit","values","uuidv4","TextField","input","multiline","rows","FormControl","FormLabel","RadioGroup","row","aria-label","FormControlLabel","value","control","Radio","labelPlacement","radio","Button","submit","startIcon","container","margin","height","width","bar","padding","appbar","appbartwo","textAlign","main","graphics","alignItems","flexDirection","wrapper","borderRadius","Screen","Grid","item","xs","AppBar","position","reducer","action","initialState","ContextProvider","children","useReducer","Provider","App","maxSnack","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","light","dark","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93cb59d7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Context = React.createContext();\r\n","import { useEffect, useState } from 'react';\r\n\r\n\r\nexport const useLocalStorage = () => {\r\n\r\n    const [state, setState] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        if( !JSON.parse(localStorage.getItem('TODOS')) ) {\r\n            localStorage.setItem('TODOS', JSON.stringify( {\r\n                todos: [],\r\n                complete: 0,\r\n                incomplete: 0\r\n            } ));\r\n        }\r\n\r\n        const parsed = JSON.parse(localStorage.getItem('TODOS'));\r\n        state && parsed.todos.unshift( state );\r\n        state && parsed.incomplete++;\r\n        localStorage.setItem('TODOS', JSON.stringify( parsed ));\r\n\r\n    }, [state])\r\n\r\n    const deleteFromLS = (id) => {\r\n        const currentLS = JSON.parse(localStorage.getItem('TODOS'));\r\n        const filter = currentLS.todos.filter( todo => todo.id !== id );\r\n        currentLS.todos = filter;\r\n        currentLS.complete++;\r\n        currentLS.incomplete--;\r\n        localStorage.setItem('TODOS', JSON.stringify( currentLS ));\r\n    }\r\n\r\n    return { ls: state, setLocalStorage: setState, deleteFromLS }\r\n\r\n}","import React, { useContext } from 'react'\r\nimport {  Card, CardContent, Typography, CardActions } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport { useSnackbar } from 'notistack';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Context } from '../globalState/context';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: '1rem'\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    }\r\n}));\r\n\r\nexport const ToDo = ({title, description, importance, id}) => {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const { dispatch } = useContext(Context);\r\n    const { deleteFromLS } = useLocalStorage();\r\n\r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: 'COMPLETE',\r\n            payload: id\r\n        })\r\n        deleteFromLS( id );\r\n        enqueueSnackbar('Tarea completada, bien hecho!', { variant: 'success' });\r\n    };\r\n\r\n    const getImportance = ( number ) => {\r\n        if(number === '1') {\r\n            return 'Mínimo'\r\n        }\r\n        if(number === '2') {\r\n            return 'Medio'\r\n        }\r\n        if(number === '3') {\r\n            return 'Alto'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fade in={true}>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\r\n                        {title}\r\n                    </Typography>\r\n                    \r\n                    <Typography color=\"textSecondary\" component=\"p\">\r\n                        {description}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" component=\"p\">\r\n                        Importancia: <strong>{getImportance(importance)}</strong>\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    <Fab \r\n                        size=\"medium\" \r\n                        color=\"secondary\" \r\n                        onClick={handleClick}\r\n                    >\r\n                        <DoneIcon />\r\n                    </Fab>\r\n                </CardActions>\r\n            </Card>\r\n        </Fade>\r\n    )\r\n}\r\n","import { Typography } from '@material-ui/core';\r\nimport React, { useContext } from 'react'\r\nimport { ToDo } from '../components/ToDo'\r\nimport { Context } from '../globalState/context'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nexport const ToDoList = ({classes}) => {\r\n\r\n    const {state} = useContext(Context);\r\n    const {todos} = state;\r\n    \r\n    return (\r\n        <div className=\"overflow\">\r\n            {\r\n                todos && todos.length === 0 && \r\n                <Fade in={true}>\r\n                    <div className=\"center\">\r\n                        <Typography variant=\"h5\" className={classes.black}>\r\n                            No hay tareas pendientes\r\n                        </Typography>\r\n                        <AddCircleIcon fontSize=\"large\" htmlColor=\"#5E5E5E\"/>\r\n                    </div>\r\n                </Fade>\r\n            }\r\n            {\r\n                todos && todos.map( (todo) => (\r\n                    <ToDo key={todo.id} title={todo.title} description={todo.description} importance={todo.importance} id={todo.id}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Context } from '../globalState/context';\r\n\r\n\r\nexport const Graphic = () => {\r\n\r\n    const {state} = useContext(Context);\r\n    const {complete, incomplete} = state;\r\n\r\n    const data = {\r\n    label: {\r\n      display: false\r\n    },\r\n    labels: [\r\n      'Completadas',\r\n      'Sin completar'\r\n    ],\r\n    datasets: [\r\n      {\r\n        data: [complete, incomplete],\r\n        backgroundColor: [\r\n          'rgba(75, 192, 192, 0.6)',\r\n          'rgba(54, 162, 235, 0.6)',\r\n        ]\r\n      }\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n    return (\r\n      <Bar data={data} options={options}/>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TextField,  Button, FormControl, FormControlLabel, Radio, RadioGroup, FormLabel } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSnackbar } from 'notistack';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../globalState/context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\n\r\nexport const Form = ({classes}) => {\r\n\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const { dispatch } = useContext(Context);\r\n    //Custom Hook\r\n    const { setLocalStorage } = useLocalStorage();\r\n\r\n    const onSubmit = (values) => {\r\n        const {title, description, importance} = values;\r\n        if(title || description || importance) {\r\n            if(description.length === 0 || title.length === 0 ) {\r\n                enqueueSnackbar('Revisa el formulario', { variant: 'error' });\r\n            } else {\r\n                //OK\r\n                const data = {\r\n                    ...values,\r\n                    id: uuidv4()\r\n                }\r\n                enqueueSnackbar('Todo agregado!', { variant: 'success' });\r\n                dispatch({\r\n                    type: 'ADD',\r\n                    payload: data\r\n                })\r\n                setLocalStorage( data );\r\n                reset();\r\n            }\r\n        } else {\r\n            enqueueSnackbar('Revisa el formulario', { variant: 'error' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={classes.form} noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField \r\n                className={classes.input} \r\n                label=\"Tarea\" \r\n                variant=\"outlined\"\r\n                {...register(\"title\")}\r\n            />\r\n            <TextField\r\n                label=\"Descripción\"\r\n                multiline\r\n                rows={4}\r\n                variant=\"outlined\"\r\n                className={classes.input} \r\n                {...register(\"description\")}\r\n            />\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Nivel de importancia</FormLabel>\r\n                <RadioGroup \r\n                    row aria-label=\"position\" \r\n                    {...register(\"importance\")}\r\n                >\r\n                    <FormControlLabel\r\n                        value=\"1\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Mínimo\"\r\n                        labelPlacement=\"bottom\"\r\n                        className={classes.radio}\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"2\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Medio\"\r\n                        labelPlacement=\"bottom\"\r\n                        className={classes.radio}\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"3\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Alto\"\r\n                        labelPlacement=\"bottom\"\r\n                        className={classes.radio}\r\n                    />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <Button type=\"submit\" className={classes.submit} variant=\"contained\" size=\"large\" color=\"primary\" startIcon={<SaveIcon />}\r\n            >\r\n                Guardar\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { AppBar, Typography } from '@material-ui/core';\r\nimport { ToDoList } from '../components/ToDoList'\r\nimport { Graphic } from '../components/Graphic'\r\nimport { Form } from '../components/Form'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        margin: 0,\r\n        color: '#fff',\r\n        height: '100vh',\r\n        width: '100%'\r\n    }, \r\n    bar: {\r\n        padding: '0 !important',\r\n    },\r\n    appbar: {\r\n        padding: '1rem',\r\n        marginBottom: '1rem'\r\n    },\r\n    appbartwo: {\r\n        padding: '1rem',\r\n        marginBottom: '1rem',\r\n        color: \"#242424\",\r\n        backgroundColor: 'white',\r\n        textAlign: 'center'\r\n    },\r\n    main: {\r\n        padding: '0 !important',\r\n        backgroundColor: '#2196F3'\r\n    },\r\n    graphics: {\r\n        padding: '0 1rem',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    input: {\r\n        width: '90%',\r\n        marginBottom: '1rem',\r\n    },\r\n    submit: {\r\n        width: '90%',\r\n    },\r\n    radio: {\r\n        color: '#242424',\r\n        marginBottom: '1rem',\r\n    },\r\n    wrapper: {\r\n        backgroundColor: '#fff',\r\n        padding: '1rem',\r\n        borderRadius: '5px'\r\n    },\r\n    black: {\r\n        color: 'black'\r\n    }\r\n}));\r\n\r\nexport default function Screen() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.container}>\r\n            <Grid item xs={3} className={classes.bar}>\r\n                <AppBar position=\"static\" className={classes.appbar}>\r\n                    <Typography variant=\"h6\">\r\n                        TodoApp\r\n                    </Typography>\r\n                </AppBar>\r\n                <Form classes={classes}/>\r\n            </Grid>\r\n            <Grid item xs={9} className={classes.main}>\r\n                <Grid container >\r\n                    <AppBar position=\"static\" className={classes.appbartwo} >\r\n                        <Typography variant=\"h6\">\r\n                            Administrar tareas\r\n                        </Typography>\r\n                    </AppBar>\r\n                    <Grid item xs={6}>\r\n                        <ToDoList classes={classes}/>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.graphics}>\r\n                        <div className={classes.wrapper}>\r\n                            <Graphic />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            return {\r\n                ...state,\r\n                todos: [action.payload, ...state.todos],\r\n                incomplete: state.incomplete + 1\r\n            }\r\n        case 'COMPLETE':\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter( todo => todo.id !== action.payload ),\r\n                complete: state.complete + 1,\r\n                incomplete: state.incomplete - 1\r\n            }\r\n        case 'INIT': \r\n            return {\r\n                ...state,\r\n                todos: action.payload.todos,\r\n                complete: action.payload.complete,\r\n                incomplete: action.payload.incomplete\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { Context } from './context'\r\nimport { reducer } from './reducer'\r\n\r\nconst initialState = {\r\n    todos: [],\r\n    complete: 0,\r\n    incomplete: 0\r\n}\r\n\r\nexport const ContextProvider = ({children}) => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch({\r\n            type: 'INIT',\r\n            payload: JSON.parse(localStorage.getItem('TODOS'))\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Context.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport Screen from './components/Screen';\nimport './App.css';\nimport { CssBaseline } from '@material-ui/core';\nimport { ContextProvider } from '../src/globalState/ContextProvider';\nimport { SnackbarProvider } from 'notistack';\n\nfunction App() {\n    return (\n        <ContextProvider>\n            <SnackbarProvider maxSnack={3}>\n                <CssBaseline />\n                <Screen />\n            </SnackbarProvider>\n        </ContextProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#64b5f6',\r\n      main: '#2196f3',\r\n      dark: '#1976d2',\r\n    },\r\n   \r\n  },\r\n});\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport theme from './theme';\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}